AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  MedRepo

  Sample SAM Template for MedRepo

Globals:
  Function:
    Timeout: 30
  Api:
    Cors: # Enable CORS globally for all API Gateway resources
      AllowMethods: "'OPTIONS,GET,POST,DELETE,PUT'"
      AllowOrigin: "'http://localhost:3000'" # Adjust as needed for specific origins
      AllowHeaders: "'Content-Type'"

Resources:
  createUser:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/
      Handler: user-management/createUser.createUser
      Runtime: nodejs18.x
      Architectures:
        - x86_64
      Events:
        HelloWorld:
          Type: Api
          Properties:
            Path: /createUser
            Method: POST
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref UserTable
            
  getALLUsers:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/
      Handler: user-management/getAllUsers.getALLUsers
      Runtime: nodejs18.x
      Architectures:
        - x86_64
      Events:
        HelloWorld:
          Type: Api
          Properties:
            Path: /getALLUsers
            Method: GET
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref UserTable
            
  updateUser:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/
      Handler: user-management/updateUser.updateUser
      Runtime: nodejs18.x
      Architectures:
        - x86_64
      Events:
        HelloWorld:
          Type: Api
          Properties:
            Path: /updateUser/{id}
            Method: PUT
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref UserTable
        - Statement:
            Effect: Allow
            Action:
              - sns:Subscribe
              - sns:Unsubscribe
              - sns:Publish
              - sns:ListSubscriptionsByTopic
            Resource:
              - arn:aws:sns:us-east-1:724772054324:EmailTopic
              - arn:aws:sns:us-east-1:724772054324:SMSTopic

  deleteUser:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/
      Handler: user-management/deleteUser.deleteUser
      Runtime: nodejs18.x
      Architectures:
        - x86_64
      Events:
        HelloWorld:
          Type: Api
          Properties:
            Path: /deleteUser/{id}
            Method: DELETE
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref UserTable
            
  getUserById:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/
      Handler: user-management/getUserById.getUserById
      Runtime: nodejs18.x
      Architectures:
        - x86_64
      Events:
        HelloWorld:
          Type: Api
          Properties:
            Path: /getUserById/{id}
            Method: GET
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref UserTable

    # Report functions
  createReport:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/
      Handler: report-management/createReport.createReport
      Runtime: nodejs18.x
      Architectures:
        - x86_64
      Events:
        HelloWorld:
          Type: Api
          Properties:
            Path: /createReport
            Method: POST
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref ReportTable
        - Statement:
            Effect: Allow
            Action:
              - lambda:InvokeFunction
            Resource:
              - arn:aws:lambda:us-east-1:724772054324:function:MedRepo-sendEmailNotification-m4ybPqS2cSYh
              - arn:aws:lambda:us-east-1:724772054324:function:MedRepo-sendSmsNotification-e5iiIGsUEP4F

            
  getReportsById:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/
      Handler: report-management/getReportsById.getReportsById
      Runtime: nodejs18.x
      Architectures:
        - x86_64
      Events:
        HelloWorld:
          Type: Api
          Properties:
            Path: /getReports/{id}
            Method: GET
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref ReportTable
            
  getUserReport:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/
      Handler: report-management/getUserReport.getUserReport
      Runtime: nodejs18.x
      Architectures:
        - x86_64
      Events:
        HelloWorld:
          Type: Api
          Properties:
            Path: /getReport
            Method: POST
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref ReportTable
            
  deleteReport:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/
      Handler: report-management/deleteReport.deleteReport
      Runtime: nodejs18.x
      Architectures:
        - x86_64
      Events:
        HelloWorld:
          Type: Api
          Properties:
            Path: /deleteReport/{id}
            Method: DELETE
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref ReportTable
            
  # Email notification function
  sendEmailNotification:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/
      Handler: notification-management/emailNotification.handler
      Runtime: nodejs18.x
      Architectures:
        - x86_64
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref UserTable  
        - Statement:
            Effect: Allow
            Action:
              - sns:Publish
            Resource:
              - arn:aws:sns:us-east-1:724772054324:EmailTopic

  # SMS notification function
  sendSmsNotification:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/
      Handler: notification-management/smsNotification.handler
      Runtime: nodejs18.x
      Architectures:
        - x86_64
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref UserTable  # Added access to UserTable for fetching user phone number
        - Statement:
            Effect: Allow
            Action:
              - sns:Publish
            Resource:
              - arn:aws:sns:us-east-1:724772054324:SMSTopic
              - '*'

  UserTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: Users
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 2
        WriteCapacityUnits: 2

  ReportTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: Reports
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 2
        WriteCapacityUnits: 2

  ApplicationResourceGroup:
    Type: AWS::ResourceGroups::Group
    Properties:
      Name:
        Fn::Sub: ApplicationInsights-SAM-${AWS::StackName}
      ResourceQuery:
        Type: CLOUDFORMATION_STACK_1_0
        
  ApplicationInsightsMonitoring:
    Type: AWS::ApplicationInsights::Application
    Properties:
      ResourceGroupName:
        Ref: ApplicationResourceGroup
      AutoConfigurationEnabled: 'true'
      
Outputs:
  HelloWorldApi:
    Description: API Gateway endpoint URL for Prod stage for Hello World function
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
